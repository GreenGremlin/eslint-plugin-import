'use strict';

exports.__esModule = true;
exports.isBuiltIn = isBuiltIn;
exports.default = resolveImportType;

var _lodash = require('lodash.cond');

var _lodash2 = _interopRequireDefault(_lodash);

var _builtinModules = require('builtin-modules');

var _builtinModules2 = _interopRequireDefault(_builtinModules);

var _path = require('path');

var _resolve = require('./resolve');

var _resolve2 = _interopRequireDefault(_resolve);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constant(value) {
  return function () {
    return value;
  };
}

function isBuiltIn(name) {
  return _builtinModules2.default.indexOf(name) !== -1;
}

var externalModuleRegExp = /^\w/;
function isExternalModule(name, path) {
  if (!externalModuleRegExp.test(name)) return false;
  return !path || -1 < path.indexOf((0, _path.join)('node_modules', name));
}

var scopedRegExp = /^@\w+\/\w+/;
function isScoped(name) {
  return scopedRegExp.test(name);
}

function isInternalModule(name, path) {
  if (!externalModuleRegExp.test(name)) return false;
  return path && -1 === path.indexOf((0, _path.join)('node_modules', name));
}

function isRelativeToParent(name) {
  return name.indexOf('../') === 0;
}

var indexFiles = ['.', './', './index', './index.js'];
function isIndex(name) {
  return indexFiles.indexOf(name) !== -1;
}

function isRelativeToSibling(name) {
  return name.indexOf('./') === 0;
}

var typeTest = (0, _lodash2.default)([[isBuiltIn, constant('builtin')], [isExternalModule, constant('external')], [isScoped, constant('external')], [isInternalModule, constant('internal')], [isRelativeToParent, constant('parent')], [isIndex, constant('index')], [isRelativeToSibling, constant('sibling')], [constant(true), constant('unknown')]]);

function resolveImportType(name, context) {
  return typeTest(name, (0, _resolve2.default)(name, context));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvaW1wb3J0VHlwZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7UUFVZ0IsUyxHQUFBLFM7a0JBNENRLGlCOztBQXREeEI7Ozs7QUFDQTs7OztBQUNBOztBQUVBOzs7Ozs7QUFFQSxTQUFTLFFBQVQsQ0FBa0IsS0FBbEIsRUFBeUI7QUFDdkIsU0FBTztBQUFBLFdBQU0sS0FBTjtBQUFBLEdBQVA7QUFDRDs7QUFFTSxTQUFTLFNBQVQsQ0FBbUIsSUFBbkIsRUFBeUI7QUFDOUIsU0FBTyx5QkFBZSxPQUFmLENBQXVCLElBQXZCLE1BQWlDLENBQUMsQ0FBekM7QUFDRDs7QUFFRCxJQUFNLHVCQUF1QixLQUE3QjtBQUNBLFNBQVMsZ0JBQVQsQ0FBMEIsSUFBMUIsRUFBZ0MsSUFBaEMsRUFBc0M7QUFDcEMsTUFBSSxDQUFDLHFCQUFxQixJQUFyQixDQUEwQixJQUExQixDQUFMLEVBQXNDLE9BQU8sS0FBUDtBQUN0QyxTQUFRLENBQUMsSUFBRCxJQUFTLENBQUMsQ0FBRCxHQUFLLEtBQUssT0FBTCxDQUFhLGdCQUFLLGNBQUwsRUFBcUIsSUFBckIsQ0FBYixDQUF0QjtBQUNEOztBQUVELElBQU0sZUFBZSxZQUFyQjtBQUNBLFNBQVMsUUFBVCxDQUFrQixJQUFsQixFQUF3QjtBQUN0QixTQUFPLGFBQWEsSUFBYixDQUFrQixJQUFsQixDQUFQO0FBQ0Q7O0FBRUQsU0FBUyxnQkFBVCxDQUEwQixJQUExQixFQUFnQyxJQUFoQyxFQUFzQztBQUNwQyxNQUFJLENBQUMscUJBQXFCLElBQXJCLENBQTBCLElBQTFCLENBQUwsRUFBc0MsT0FBTyxLQUFQO0FBQ3RDLFNBQVEsUUFBUSxDQUFDLENBQUQsS0FBTyxLQUFLLE9BQUwsQ0FBYSxnQkFBSyxjQUFMLEVBQXFCLElBQXJCLENBQWIsQ0FBdkI7QUFDRDs7QUFFRCxTQUFTLGtCQUFULENBQTRCLElBQTVCLEVBQWtDO0FBQ2hDLFNBQU8sS0FBSyxPQUFMLENBQWEsS0FBYixNQUF3QixDQUEvQjtBQUNEOztBQUVELElBQU0sYUFBYSxDQUFDLEdBQUQsRUFBTSxJQUFOLEVBQVksU0FBWixFQUF1QixZQUF2QixDQUFuQjtBQUNBLFNBQVMsT0FBVCxDQUFpQixJQUFqQixFQUF1QjtBQUNyQixTQUFPLFdBQVcsT0FBWCxDQUFtQixJQUFuQixNQUE2QixDQUFDLENBQXJDO0FBQ0Q7O0FBRUQsU0FBUyxtQkFBVCxDQUE2QixJQUE3QixFQUFtQztBQUNqQyxTQUFPLEtBQUssT0FBTCxDQUFhLElBQWIsTUFBdUIsQ0FBOUI7QUFDRDs7QUFFRCxJQUFNLFdBQVcsc0JBQUssQ0FDcEIsQ0FBQyxTQUFELEVBQVksU0FBUyxTQUFULENBQVosQ0FEb0IsRUFFcEIsQ0FBQyxnQkFBRCxFQUFtQixTQUFTLFVBQVQsQ0FBbkIsQ0FGb0IsRUFHcEIsQ0FBQyxRQUFELEVBQVcsU0FBUyxVQUFULENBQVgsQ0FIb0IsRUFJcEIsQ0FBQyxnQkFBRCxFQUFtQixTQUFTLFVBQVQsQ0FBbkIsQ0FKb0IsRUFLcEIsQ0FBQyxrQkFBRCxFQUFxQixTQUFTLFFBQVQsQ0FBckIsQ0FMb0IsRUFNcEIsQ0FBQyxPQUFELEVBQVUsU0FBUyxPQUFULENBQVYsQ0FOb0IsRUFPcEIsQ0FBQyxtQkFBRCxFQUFzQixTQUFTLFNBQVQsQ0FBdEIsQ0FQb0IsRUFRcEIsQ0FBQyxTQUFTLElBQVQsQ0FBRCxFQUFpQixTQUFTLFNBQVQsQ0FBakIsQ0FSb0IsQ0FBTCxDQUFqQjs7QUFXZSxTQUFTLGlCQUFULENBQTJCLElBQTNCLEVBQWlDLE9BQWpDLEVBQTBDO0FBQ3ZELFNBQU8sU0FBUyxJQUFULEVBQWUsdUJBQVEsSUFBUixFQUFjLE9BQWQsQ0FBZixDQUFQO0FBQ0QiLCJmaWxlIjoiY29yZS9pbXBvcnRUeXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmQgZnJvbSAnbG9kYXNoLmNvbmQnXG5pbXBvcnQgYnVpbHRpbk1vZHVsZXMgZnJvbSAnYnVpbHRpbi1tb2R1bGVzJ1xuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnXG5cbmltcG9ydCByZXNvbHZlIGZyb20gJy4vcmVzb2x2ZSdcblxuZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuICgpID0+IHZhbHVlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0J1aWx0SW4obmFtZSkge1xuICByZXR1cm4gYnVpbHRpbk1vZHVsZXMuaW5kZXhPZihuYW1lKSAhPT0gLTFcbn1cblxuY29uc3QgZXh0ZXJuYWxNb2R1bGVSZWdFeHAgPSAvXlxcdy9cbmZ1bmN0aW9uIGlzRXh0ZXJuYWxNb2R1bGUobmFtZSwgcGF0aCkge1xuICBpZiAoIWV4dGVybmFsTW9kdWxlUmVnRXhwLnRlc3QobmFtZSkpIHJldHVybiBmYWxzZVxuICByZXR1cm4gKCFwYXRoIHx8IC0xIDwgcGF0aC5pbmRleE9mKGpvaW4oJ25vZGVfbW9kdWxlcycsIG5hbWUpKSlcbn1cblxuY29uc3Qgc2NvcGVkUmVnRXhwID0gL15AXFx3K1xcL1xcdysvXG5mdW5jdGlvbiBpc1Njb3BlZChuYW1lKSB7XG4gIHJldHVybiBzY29wZWRSZWdFeHAudGVzdChuYW1lKVxufVxuXG5mdW5jdGlvbiBpc0ludGVybmFsTW9kdWxlKG5hbWUsIHBhdGgpIHtcbiAgaWYgKCFleHRlcm5hbE1vZHVsZVJlZ0V4cC50ZXN0KG5hbWUpKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIChwYXRoICYmIC0xID09PSBwYXRoLmluZGV4T2Yoam9pbignbm9kZV9tb2R1bGVzJywgbmFtZSkpKVxufVxuXG5mdW5jdGlvbiBpc1JlbGF0aXZlVG9QYXJlbnQobmFtZSkge1xuICByZXR1cm4gbmFtZS5pbmRleE9mKCcuLi8nKSA9PT0gMFxufVxuXG5jb25zdCBpbmRleEZpbGVzID0gWycuJywgJy4vJywgJy4vaW5kZXgnLCAnLi9pbmRleC5qcyddXG5mdW5jdGlvbiBpc0luZGV4KG5hbWUpIHtcbiAgcmV0dXJuIGluZGV4RmlsZXMuaW5kZXhPZihuYW1lKSAhPT0gLTFcbn1cblxuZnVuY3Rpb24gaXNSZWxhdGl2ZVRvU2libGluZyhuYW1lKSB7XG4gIHJldHVybiBuYW1lLmluZGV4T2YoJy4vJykgPT09IDBcbn1cblxuY29uc3QgdHlwZVRlc3QgPSBjb25kKFtcbiAgW2lzQnVpbHRJbiwgY29uc3RhbnQoJ2J1aWx0aW4nKV0sXG4gIFtpc0V4dGVybmFsTW9kdWxlLCBjb25zdGFudCgnZXh0ZXJuYWwnKV0sXG4gIFtpc1Njb3BlZCwgY29uc3RhbnQoJ2V4dGVybmFsJyldLFxuICBbaXNJbnRlcm5hbE1vZHVsZSwgY29uc3RhbnQoJ2ludGVybmFsJyldLFxuICBbaXNSZWxhdGl2ZVRvUGFyZW50LCBjb25zdGFudCgncGFyZW50JyldLFxuICBbaXNJbmRleCwgY29uc3RhbnQoJ2luZGV4JyldLFxuICBbaXNSZWxhdGl2ZVRvU2libGluZywgY29uc3RhbnQoJ3NpYmxpbmcnKV0sXG4gIFtjb25zdGFudCh0cnVlKSwgY29uc3RhbnQoJ3Vua25vd24nKV0sXG5dKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlSW1wb3J0VHlwZShuYW1lLCBjb250ZXh0KSB7XG4gIHJldHVybiB0eXBlVGVzdChuYW1lLCByZXNvbHZlKG5hbWUsIGNvbnRleHQpKVxufVxuIl19